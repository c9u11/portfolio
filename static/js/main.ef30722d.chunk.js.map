{"version":3,"sources":["api/api.ts","atoms.ts","components/Content.tsx","components/AboutMe.tsx","components/Career.tsx","components/Contact.tsx","components/Header.tsx","components/Project.tsx","components/TopNav.tsx","pages/Portfolio.tsx","theme.tsx","App.tsx","index.tsx"],"names":["fetchPortfolioData","fetch","then","res","json","scrolledAtom","atom","key","default","Container","styled","div","ContentWrapper","ContentTitle","h2","Content","id","title","children","style","className","ContentBody","Intro","p","ImgWrapper","Img","img","AboutMe","aboutMe","profile","backgroundColor","src","Info","Title","h3","Summary","Description","DescriptionTitle","h4","DescriptionBody","Tags","ul","Tag","li","Career","careers","map","career","index","imgURL","tags","tag","summary","description","body","Contact","span","Link","a","contacts","contact","href","text","HeaderWrapper","header","BackgroundVideo","video","Header","backgroundVideo","intro","loop","muted","autoPlay","start","end","props","order","Project","projects","project","TopNavWrapper","Logo","MenuIcon","color","FlexSpacer","GridSpacer","unit","HoverImage","hoverImg","TopNav","logo","scrolledLogo","links","scrolled","useRecoilValue","scrolledColor","alt","kakaotalk","instagram","github","Portfolio","useQuery","isLoading","data","setScrolled","useSetRecoilState","ScrolledHandler","headerHeight","document","querySelector","clientHeight","topnavHeight","windowY","window","scrollY","onscroll","onresize","logoWhite","lightTheme","bgColor","borderColor","primaryTextColor","secondaryTextColor","errorColor","accentColor","boxBgColor","boxTextColor","GlobalStyle","createGlobalStyle","theme","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","getElementById"],"mappings":"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","file":"static/js/main.ef30722d.chunk.js","sourcesContent":["export function fetchPortfolioData() {\n  return fetch(`/data.json`).then(res => res.json());\n}","import { atom } from \"recoil\";\n\n\nexport const scrolledAtom = atom({\n  key: \"scrolled\",\n  default: false,\n})","import styled from \"styled-components\";\n\nconst Container = styled.div`\n`;\nconst ContentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  grid-column: 2 / 12;\n  width: 100%;\n  margin: 5% 0px;\n  max-width: 1280px;\n`;\nconst ContentTitle = styled.h2`\n  font-size: 41px;\n  margin-bottom: 20px;\n`\n\ninterface IContent {\n  id: string;\n  title: string;\n  children: React.ReactNode;\n  style?: React.CSSProperties;\n}\n\nfunction Content({ id, title, children, style }: IContent) {\n  return (\n    <Container className=\"grid\" id={id} style={style}>\n      <ContentWrapper>\n        <ContentTitle>{title}</ContentTitle>\n        {children}\n      </ContentWrapper>\n    </Container>\n  );\n}\n\nexport default Content;\n","import styled from \"styled-components\";\nimport Content from \"./Content\";\nconst ContentBody = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst Intro = styled.p`\n  flex: 1;\n  margin-right: 10%;\n`;\nconst ImgWrapper = styled.div`\n  position: relative;\n  overflow: hidden;\n  width: 20%;\n  height: auto;\n  border-radius: 50%;\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n  &:before{\n    content: \"\";\n    display: block;\n    padding-top: 100%;\n  }\n`;\nconst Img = styled.img`\n  position: absolute;\n  width: 100%;\n  height: auto;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\ninterface IAboutMe {\n  aboutMe: string | undefined;\n  profile: string | undefined;\n}\nfunction AboutMe({ aboutMe, profile }: IAboutMe) {\n  return (\n    <Content id=\"about-me\" title=\"About me\" style={{ backgroundColor: \"#fbf9f9\" }}>\n      <ContentBody>\n        <Intro>{aboutMe || \"\"}</Intro>\n        <ImgWrapper>\n          <Img src={profile || \"\"}></Img>\n        </ImgWrapper>\n      </ContentBody>\n    </Content>\n  )\n}\nexport default AboutMe;","import styled from \"styled-components\";\nimport { ICareer } from \"../Interface/interface\";\nimport Content from \"./Content\";\n\nconst ContentBody = styled.div`\n  display: flex;\n  align-items: flex-start;\n`;\nconst ImgWrapper = styled.div`\n  position: relative;\n  overflow: hidden;\n  width: 15%;\n  height: auto;\n  border-radius: 50%;\n  background-color: white;\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n  &:before{\n    content: \"\";\n    display: block;\n    padding-top: 100%;\n  }\n`;\nconst Img = styled.img`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform:translate(-50%,-50%);\n  width: 100%;\n  height: auto;\n  background-color: white;\n`;\nconst Info = styled.div`\n  padding: 0px 20px;\n  flex: 1;\n`;\nconst Title = styled.h3`\n  color: #a5936e;\n  font-size: 24px;\n`;\nconst Summary = styled.p`\nfont-weight: bold;`;\nconst Description = styled.div``;\nconst DescriptionTitle = styled.h4``;\nconst DescriptionBody = styled.p``;\nconst Tags = styled.ul``;\nconst Tag = styled.li`\n  display: inline-block;\n  list-style: none;\n  padding: 5px;\n  margin: 5px;\n  border: #a5936e solid 1px;\n  border-radius: 10px;\n`;\ninterface ICareers {\n  careers: ICareer[] | undefined;\n}\n\nfunction Career({ careers }: ICareers) {\n  return (\n    <Content id=\"careers\" title=\"Career\" style={{ backgroundColor: \"#e2e5e6\" }}>\n      {careers?.map((career, index) => {\n        return (\n          <ContentBody>\n            <ImgWrapper>\n              <Img src={career.imgURL || \"\"}></Img>\n            </ImgWrapper>\n            <Info>\n              <Title>{career.title}</Title>\n              <Tags>\n                {career.tags.map((tag, index) => {\n                  return <Tag key={index}>{tag}</Tag>;\n                })}\n              </Tags>\n              <Summary>{career.summary}</Summary>\n              {career.description.map(({ title, body }, index) => {\n                return (\n                  <Description key={index}>\n                    <DescriptionTitle>{title}</DescriptionTitle>\n                    <DescriptionBody>{body}</DescriptionBody>\n                  </Description>\n                );\n              })}\n            </Info>\n          </ContentBody>\n        )\n      })\n      }\n    </Content>\n  );\n}\nexport default Career;\n","import styled from \"styled-components\";\nimport { IContact } from \"../Interface/interface\";\nimport Content from \"./Content\";\n\nconst ContentBody = styled.ul`\n  display: flex;\n  align-items: flex-start;\n`;\nconst Contact = styled.li`\n`;\nconst Title = styled.span`\n  color: #a5936e;\n  font-size: 24px;\n`;\nconst Link = styled.a`\nfont-weight: bold;`;\ninterface IContacts {\n  contacts: IContact[] | undefined;\n}\n\nfunction Career({ contacts }: IContacts) {\n  return (\n    <Content id=\"contacts\" title=\"Contact\">\n      <ContentBody>\n        {contacts?.map((contact, index) => {\n          return (\n            <Contact key={`contact-${index}`}>\n              <Title>{contact.title}</Title>\n              <Link href={contact.href}>\n                {contact.text}\n              </Link>\n            </Contact>\n          )\n        })}\n      </ContentBody>\n    </Content>\n  );\n}\nexport default Career;\n","import styled from \"styled-components\";\n\nconst HeaderWrapper = styled.header`\n  position: relative;\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: 0%;\n    left: 0%;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.2);\n  }\n`;\nconst BackgroundVideo = styled.video`\n  width: 100%;\n  height: auto;\n`;\nconst Intro = styled.span`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 4.2rem;\n  color: white;\n  white-space: nowrap;\n  @media screen and (min-width:480px) and (max-width:767px) {\n    font-size: 2.7rem;\n  }\n  @media screen and (max-width: 479px) {\n    font-size: 1.6rem;\n  }\n`;\n\ninterface IHeader {\n  backgroundVideo: string | undefined;\n  intro: {\n    start: string;\n    end: string;\n  } | undefined;\n}\nfunction Header({ backgroundVideo, intro }: IHeader) {\n  return (\n    <HeaderWrapper id=\"header\">\n      <BackgroundVideo loop={true} muted={true} autoPlay src={backgroundVideo || \"\"}></BackgroundVideo>\n      <Intro>{intro?.start || \"\"}<br />{intro?.end || \"\"}</Intro>\n    </HeaderWrapper>\n  )\n}\n\nexport default Header","import styled from \"styled-components\";\nimport { IProject } from \"../Interface/interface\";\nimport Content from \"./Content\";\n\nconst ContentBody = styled.div`\ndisplay: grid;\ngrid-template-columns: 1fr 1fr;\nalign-items: center;\njustify-items: center;\ngrid-gap: 10px;\nmargin: 30px 0px;\n`;\nconst Img = styled.img<{ order: number }>`\nbackground-color: bisque;\nwidth: 100%;\nheight: 100%;\nborder-radius: 10px;\norder: ${props => props.order};\nbox-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n`;\nconst Info = styled.div`\n  padding: 10px;\n`;\nconst Title = styled.h3`\n  color: #a5936e;\n  font-size: 24px;\n`;\nconst Summary = styled.p`\nfont-weight: bold;`;\nconst Description = styled.p``;\nconst Tags = styled.ul``;\nconst Tag = styled.li`\n  display: inline-block;\n  list-style: none;\n  padding: 5px;\n  margin: 5px;\n  border: #a5936e solid 1px;\n  border-radius: 10px;\n`;\ninterface IProjects {\n  projects: IProject[] | undefined;\n}\n\nfunction Project({ projects }: IProjects) {\n  return (\n    <Content id=\"projects\" title=\"Project\">\n      {projects?.map((project, index) => {\n        return (\n          <ContentBody>\n            <Img\n              order={(index || 0) % 2 === 0 ? 1 : 0}\n              src={project.imgURL || \"\"}\n            ></Img>\n            <Info>\n              <Title>{project.title || \"\"}</Title>\n              <Summary>{project.summary || \"\"}</Summary>\n              <Description>{project.description || \"\"}</Description>\n              <Tags>\n                {project.tags.map((tag, index) => {\n                  return <Tag key={`project-tag-${index || \"\"}`}>{tag || \"\"}</Tag>;\n                })}\n              </Tags>\n            </Info>\n          </ContentBody>\n        )\n      })\n      }\n    </Content>\n  );\n}\nexport default Project;\n","import { useRecoilValue } from \"recoil\";\nimport styled from \"styled-components\";\nimport { scrolledAtom } from \"../atoms\";\n\nconst TopNavWrapper = styled.div`\n  position: fixed;\n  top: 0%;\n  transition: all 0.3s;\n  font-size : 1.6rem;\n  z-index: 1;\n  * {\n    grid-column-end: span 1;\n    max-width: 96px;\n  }\n  a {\n    cursor: pointer;\n  }\n\n\n  display: grid;\n  width: 100%;\n  grid-template-columns: repeat(12, 1fr);\n  grid-auto-rows: minmax(5rem, auto);\n  grid-gap: 10px;\n  align-items: center;\n  justify-items: center;\n  @media screen and (min-width:480px) and (max-width:767px) {\n    display: flex;\n    font-size : 1.4rem;\n    grid-gap: unset;\n  }\n  @media screen and (max-width: 479px) {\n    display: flex;\n    font-size : 1rem;\n    grid-gap: unset;\n  }\n`;\nconst Logo = styled.a`\n  img{\n    width: 100%;\n    height: auto;\n  }\n  @media screen and (min-width:480px) and (max-width:767px) {\n    width: 50px;\n  }\n  @media screen and (max-width: 479px) {\n    width: 50px;\n  }\n`;\nconst MenuIcon = styled.a<{ color?: string }>`\n  width: 100%;\n  position: relative;\n  text-align: center;\n  color: ${props => props.color};\n  font-weight: bold;\n  text-decoration: none;\n  &:after{\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    transform: scaleX(0);\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    transform-origin: bottom right;\n    transition: transform 0.25s ease-out;\n    background-color: ${props => props.color};\n  }\n  &:hover:after{\n    transform: scaleX(1);\n    transform-origin: bottom left;\n  }\n  @media screen and (min-width:480px) and (max-width:767px) {\n    width: auto;\n    padding: 10px;\n  }\n  @media screen and (max-width: 479px) {\n    width: auto;\n    padding: 10px;\n  }\n`;\nconst FlexSpacer = styled.div`\n  display:none;\n  @media screen and (min-width:480px) and (max-width:767px) {\n    display:block;\n    flex: 1;\n    max-width: none;\n  }\n  @media screen and (max-width: 479px) {\n    display:block;\n    flex: 1;\n    max-width: none;\n  }\n`\nconst GridSpacer = styled.div<{ unit: string }>`\n  grid-column-end: span ${props => props.unit};\n  @media screen and (min-width:480px) and (max-width:767px) {\n    display:none;\n  }\n  @media screen and (max-width: 479px) {\n    display:none;\n  }\n`\nconst HoverImage = styled.a<{ img: string, hoverImg: string }>`\n  width: 100%;\n  height: 50%;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: auto 100%;\n  transition: all 0.5s;\n  background-image:url(${props => props.img});\n  &:hover{\n  background-image:url(${props => props.hoverImg});\n  }\n  @media screen and (min-width:480px) and (max-width:767px) {\n    display:none;\n  }\n  @media screen and (max-width: 479px) {\n    display:none;\n  }\n`;\n\ninterface ITopNav {\n  logo: string | undefined;\n  scrolledLogo: string | undefined;\n  links: {\n    kakaotalk: string | undefined;\n    instagram: string | undefined;\n    github: string | undefined;\n  } | undefined;\n}\nfunction TopNav({ logo, scrolledLogo, links }: ITopNav) {\n  const scrolled = useRecoilValue(scrolledAtom)\n  const scrolledColor = scrolled ? \"#a5936e\" : \"white\";\n\n  return (\n    <TopNavWrapper id=\"topnav\" style={{\n      backgroundColor: scrolled ? \"white\" : \"transparent\"\n    }}>\n      <Logo href=\"#header\" className={scrolled ? \"scrolled\" : \"\"}>\n        <img src={(scrolled ? scrolledLogo : logo) || \"\"} alt=\"Logo\"></img>\n      </Logo>\n      <FlexSpacer></FlexSpacer>\n      <MenuIcon color={scrolledColor} href=\"#about-me\">About me</MenuIcon>\n      <MenuIcon color={scrolledColor} href=\"#projects\">Projects</MenuIcon>\n      <MenuIcon color={scrolledColor} href=\"#careers\">Career</MenuIcon>\n      <MenuIcon color={scrolledColor} href=\"#contacts\">Contact</MenuIcon>\n      <GridSpacer unit=\"4\"></GridSpacer>\n      <HoverImage href={links?.kakaotalk || \"\"} img=\"/icon/kakao-talk.png\" hoverImg=\"/icon/kakao-talk-hover.png\"></HoverImage>\n      <HoverImage href={links?.instagram || \"\"} img=\"/icon/instagram.png\" hoverImg=\"/icon/instagram-hover.png\"></HoverImage>\n      <HoverImage href={links?.github || \"\"} img=\"/icon/github.png\" hoverImg=\"/icon/github-hover.png\"></HoverImage>\n    </TopNavWrapper>\n  )\n\n}\n\nexport default TopNav;","import { useQuery } from \"react-query\";\nimport { useSetRecoilState } from \"recoil\";\nimport { fetchPortfolioData } from \"../api/api\";\nimport { scrolledAtom } from \"../atoms\";\nimport AboutMe from \"../components/AboutMe\";\nimport Career from \"../components/Career\";\nimport Contact from \"../components/Contact\";\nimport Header from \"../components/Header\";\nimport Project from \"../components/Project\";\nimport TopNav from \"../components/TopNav\";\nimport { IPortFolioData } from \"../Interface/interface\";\n\n\nfunction Portfolio() {\n  const { isLoading, data } = useQuery<IPortFolioData>(\"portfolioData\", fetchPortfolioData);\n  const setScrolled = useSetRecoilState(scrolledAtom);\n  const ScrolledHandler = () => {\n    const headerHeight = document.querySelector(\"#header\")?.clientHeight || 0;\n    const topnavHeight = document.querySelector(\"#topnav\")?.clientHeight || 0;\n    const windowY = window.scrollY;\n    if (windowY >= headerHeight - topnavHeight) setScrolled(true);\n    else setScrolled(false);\n  };\n  document.onscroll = ScrolledHandler;\n  document.onresize = ScrolledHandler;\n  return (\n    <>\n      {isLoading ?\n        null :\n        <>\n          <TopNav logo={data?.logoWhite} scrolledLogo={data?.logo} links={data?.links}></TopNav>\n          <Header backgroundVideo={data?.backgroundVideo} intro={data?.intro}></Header>\n          <AboutMe aboutMe={data?.aboutMe} profile={data?.profile}></AboutMe>\n          <Project projects={data?.projects}></Project>\n          <Career careers={data?.careers}></Career>\n          <Contact contacts={data?.contacts}></Contact>\n        </>\n      }\n    </>\n  )\n}\nexport default Portfolio;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"white\",\n  borderColor: \"#C4C9D4\",\n  primaryTextColor: \"#363C49\",\n  secondaryTextColor: \"#58627D\",\n  errorColor: \"#B42818\",\n  accentColor: \"#FF9500\",\n  boxBgColor: \"#FFFFFF\",\n  boxTextColor: \"#555c6e\"\n}\n","import { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Portfolio from \"./pages/Portfolio\";\nimport { ReactQueryDevtools } from \"react-query/devtools\"\nimport { lightTheme } from \"./theme\";\nimport { scrolledAtom } from \"./atoms\";\nimport { useSetRecoilState } from \"recoil\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nfont-family: 'Source Sans Pro', sans-serif;\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, menu, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  main, menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure,\n  footer, header, hgroup, main, menu, nav, section {\n    display: block;\n  }\n  /* HTML5 hidden-attribute fix for newer browsers */\n  *[hidden] {\n      display: none;\n  }\n  body {\n    line-height: 1;\n  }\n  menu, ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    font-family: 'Source Sans Pro', sans-serif;\n    background-color: ${props => props.theme.bgColor};\n    color: ${props => props.theme.primaryTextColor};\n  }\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n  html {\n    font-size: 62.5%;\n  }\n`\n\nfunction App() {\n  return (\n    <ThemeProvider theme={lightTheme}>\n      <GlobalStyle>\n      </GlobalStyle>\n      <Portfolio ></Portfolio>\n      <ReactQueryDevtools initialIsOpen={true} />\n    </ThemeProvider>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { RecoilRoot } from \"recoil\";\nimport \"./index.css\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}