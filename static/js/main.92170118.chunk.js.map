{"version":3,"sources":["api/api.ts","atoms.ts","components/Content.tsx","components/AboutMe.tsx","components/Career.tsx","components/Contact.tsx","components/Header.tsx","components/Project.tsx","components/TopNav.tsx","pages/Portfolio.tsx","theme.tsx","App.tsx","index.tsx"],"names":["fetchPortfolioData","fetch","process","then","res","json","scrolledAtom","atom","key","default","Container","styled","ContentWrapper","ContentTitle","Content","id","title","children","style","className","ContentBody","Intro","props","theme","primaryTextColor","ImgWrapper","Img","AboutMe","aboutMe","profile","backgroundColor","src","Info","Title","Summary","Description","secondaryTextColor","DescriptionTitle","h4","DescriptionBody","pre","Tags","ul","Tag","li","Career","careers","color","map","career","index","imgURL","tags","tag","summary","description","body","boxTextColor","Contact","Link","contacts","border","contact","href","text","HeaderWrapper","BackgroundVideo","Header","backgroundVideo","intro","console","log","loop","muted","autoPlay","start","highlights","eraseDelay","typingDelay","end","boxBgColor","order","accentColor","Project","projects","project","TopNavWrapper","Logo","MenuIcon","FlexSpacer","GridSpacer","unit","HoverImage","img","hoverImg","TopNav","logo","scrolledLogo","links","scrolled","useRecoilValue","scrolledColor","alt","kakaotalk","instagram","github","Portfolio","useQuery","isLoading","data","setScrolled","useSetRecoilState","ScrolledHandler","headerHeight","document","querySelector","clientHeight","topnavHeight","windowY","window","scrollY","onscroll","onresize","logoWhite","lightTheme","bgColor","borderColor","errorColor","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","getElementById"],"mappings":"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","file":"static/js/main.92170118.chunk.js","sourcesContent":["export function fetchPortfolioData() {\n  return fetch(`${process.env.PUBLIC_URL}/data.json`).then(res => res.json());\n}","import { atom } from \"recoil\";\n\n\nexport const scrolledAtom = atom({\n  key: \"scrolled\",\n  default: false,\n})","import styled from \"styled-components\";\n\nconst Container = styled(\"div\")`\n`;\nconst ContentWrapper = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  grid-column: 2 / 12;\n  width: 100%;\n  margin: 5% 0px;\n  max-width: 1280px;\n`;\nconst ContentTitle = styled(\"h2\")`\n  font-size: 41px;\n  margin-bottom: 20px;\n`\n\ninterface IContent {\n  id: string;\n  title: string;\n  children: React.ReactNode;\n  style?: React.CSSProperties;\n}\n\nfunction Content({ id, title, children, style }: IContent) {\n  return (\n    <Container className=\"grid\" id={id} style={style}>\n      <ContentWrapper>\n        <ContentTitle>{title}</ContentTitle>\n        {children}\n      </ContentWrapper>\n    </Container>\n  );\n}\n\nexport default Content;\n","import styled from \"styled-components\";\nimport Content from \"./Content\";\nconst ContentBody = styled(\"div\")`\n  display: flex;\n  align-items: center;\n  @media screen and (min-width:480px) and (max-width:767px) {\n  }\n  @media screen and (max-width: 479px) {\n    flex-direction: column;\n  }\n`;\nconst Intro = styled(\"pre\")`\n  flex: 1;\n  margin-right: 10%;\n  font-size: 1.6rem;\n  white-space: break-spaces;\n  color: ${props => props.theme.primaryTextColor};\n  @media screen and (min-width:480px) and (max-width:767px) {\n    font-size: 1.4rem;\n  }\n  @media screen and (max-width: 479px) {\n    order: 1;\n    margin-top: 20px;\n    margin-right: 0;\n    font-size: 1rem;\n  }\n`;\nconst ImgWrapper = styled(\"div\")`\n  position: relative;\n  overflow: hidden;\n  width: 20%;\n  height: auto;\n  border-radius: 50%;\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n  &:before{\n    content: \"\";\n    display: block;\n    padding-top: 100%;\n  }\n  @media screen and (min-width:480px) and (max-width:767px) {\n  }\n  @media screen and (max-width: 479px) {\n    width: 30%;\n    order:0;\n  }\n`;\nconst Img = styled(\"img\")`\n  position: absolute;\n  width: 100%;\n  height: auto;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\ninterface IAboutMe {\n  aboutMe: string | undefined;\n  profile: string | undefined;\n}\nfunction AboutMe({ aboutMe, profile }: IAboutMe) {\n  return (\n    <Content id=\"about-me\" title=\"About me\" style={{ backgroundColor: \"#fbf9f9\" }}>\n      <ContentBody>\n        <Intro>{aboutMe || \"\"}</Intro>\n        <ImgWrapper>\n          <Img src={process.env.PUBLIC_URL + profile || \"\"}></Img>\n        </ImgWrapper>\n      </ContentBody>\n    </Content>\n  )\n}\nexport default AboutMe;","import styled from \"styled-components\";\nimport { ICareer } from \"../Interface/interface\";\nimport Content from \"./Content\";\n\nconst ContentBody = styled(\"div\")`\n  display: flex;\n  align-items: flex-start;\n`;\nconst ImgWrapper = styled(\"div\")`\n  position: relative;\n  overflow: hidden;\n  width: 15%;\n  height: auto;\n  border-radius: 50%;\n  background-color: white;\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n  &:before{\n    content: \"\";\n    display: block;\n    padding-top: 100%;\n  }\n`;\nconst Img = styled(\"img\")`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform:translate(-50%,-50%);\n  width: 100%;\n  height: auto;\n  background-color: white;\n`;\nconst Info = styled(\"div\")`\n  padding: 0px 20px;\n  flex: 1;\n  font-size: 1.6rem;\n  @media screen and (min-width:480px) and (max-width:767px) {\n    font-size: 1.2rem;\n  }\n  @media screen and (max-width: 479px) {\n    font-size: 1.0rem;\n  }\n`;\nconst Title = styled(\"h3\")`\ncolor: ${props => props.theme.primaryTextColor};\nfont-size: 2.4rem;\nmargin-bottom: 20px;\nfont-weight: bold;\n@media screen and (min-width:480px) and (max-width:767px) {\n  font-size: 2.2rem;\n}\n@media screen and (max-width: 479px) {\n  font-size: 2.0rem;\n}\n`;\nconst Summary = styled(\"pre\")`\nfont-weight: bold;\nwhite-space: break-spaces;\nmargin-bottom: 10px;\ncolor: ${props => props.theme.primaryTextColor};\n`;\nconst Description = styled(\"div\")`\ncolor: ${props => props.theme.secondaryTextColor};`;\nconst DescriptionTitle = styled.h4`\nfont-weight: bold`;\nconst DescriptionBody = styled.pre`\nwhite-space: break-spaces;\nmargin-bottom: 10px;\ncolor: ${props => props.theme.secondaryTextColor};`;\nconst Tags = styled.ul`\n  margin: 10px 0px;\n`;\nconst Tag = styled.li`\n  display: inline-block;\n  list-style: none;\n  padding: 5px;\n  margin: 5px;\n  border: #afcfe1 solid 3px;\n  border-radius: 10px;\n  background-color: #afcfe1;\n  color: white;\n`;\ninterface ICareers {\n  careers: ICareer[] | undefined;\n}\n\nfunction Career({ careers }: ICareers) {\n  return (\n    <Content id=\"careers\" title=\"Career\" style={{ backgroundColor: \"#e2e5e6\", color: \"white\" }}>\n      {careers?.map((career, index) => {\n        return (\n          <ContentBody key={index}>\n            <ImgWrapper>\n              <Img src={process.env.PUBLIC_URL + career.imgURL || \"\"}></Img>\n            </ImgWrapper>\n            <Info>\n              <Title>{career.title}</Title>\n              <Tags>\n                {career.tags.map((tag, index) => {\n                  return <Tag key={index}>{tag}</Tag>;\n                })}\n              </Tags>\n              <Summary>{career.summary}</Summary>\n              {career.description.map(({ title, body }, index) => {\n                return (\n                  <Description key={index}>\n                    <DescriptionTitle>{title}</DescriptionTitle>\n                    <DescriptionBody>{body}</DescriptionBody>\n                  </Description>\n                );\n              })}\n            </Info>\n          </ContentBody>\n        )\n      })\n      }\n    </Content>\n  );\n}\nexport default Career;\n","import styled from \"styled-components\";\nimport { IContact } from \"../Interface/interface\";\nimport Content from \"./Content\";\n\nconst ContentBody = styled(\"ul\")`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  background-color:white;\n  padding: 20px;\n  color: ${props => props.theme.boxTextColor};\n  font-size: 1.6rem;\n  @media screen and (min-width:480px) and (max-width:767px) {\n    font-size: 1.2rem;\n  }\n  @media screen and (max-width: 479px) {\n    font-size: 1.0rem;\n  }\n`;\nconst Contact = styled(\"li\")`\n`;\nconst Title = styled(\"span\")`\n  font-weight: bold;\n  font-size: 2.0rem;\n  @media screen and (min-width:480px) and (max-width:767px) {\n    font-size: 1.8rem;\n  }\n  @media screen and (max-width: 479px) {\n    font-size: 1.6rem;\n  }\n`;\nconst Link = styled(\"a\")`\n`;\ninterface IContacts {\n  contacts: IContact[] | undefined;\n}\n\nfunction Career({ contacts }: IContacts) {\n  return (\n    <Content id=\"contacts\" title=\"Contact\" style={{ color: \"white\", backgroundColor: \"#C2BAB1\", border: \"white 30px solid\" }}>\n      <ContentBody>\n        {contacts?.map((contact, index) => {\n          return (\n            <Contact key={`contact-${index}`}>\n              <Title>{contact.title} : </Title>\n              <Link href={contact.href}>\n                {contact.text}\n              </Link>\n            </Contact>\n          )\n        })}\n      </ContentBody>\n    </Content>\n  );\n}\nexport default Career;\n","import styled from \"styled-components\";\nimport ReactTypingEffect from 'react-typing-effect';\n\nconst HeaderWrapper = styled(\"header\")`\n  position: relative;\n  max-height: 50vh;\n  overflow: hidden;\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: 0%;\n    left: 0%;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.2);\n  }\n`;\nconst BackgroundVideo = styled(\"video\")`\n  width: 100%;\n  height: auto;\n`;\nconst Intro = styled(\"span\")`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 4.2rem;\n  color: white;\n  white-space: nowrap;\n  @media screen and (min-width:480px) and (max-width:767px) {\n    font-size: 2.7rem;\n  }\n  @media screen and (max-width: 479px) {\n    font-size: 1.6rem;\n  }\n  span {\n    font-weight: bold;\n  }\n`;\n\ninterface IHeader {\n  backgroundVideo: string | undefined;\n  intro: {\n    start: string;\n    end: string;\n    highlights: string[];\n  } | undefined;\n}\nfunction Header({ backgroundVideo, intro }: IHeader) {\n  console.log(intro);\n  return (\n    <HeaderWrapper id=\"header\">\n      <BackgroundVideo loop={true} muted={true} autoPlay src={process.env.PUBLIC_URL + backgroundVideo || \"\"}></BackgroundVideo>\n      <Intro>{intro?.start || \"\"} <ReactTypingEffect text={intro?.highlights || []} eraseDelay={1000} typingDelay={1000}></ReactTypingEffect><br />{intro?.end || \"\"}</Intro>\n    </HeaderWrapper>\n  )\n}\n\nexport default Header","import styled from \"styled-components\";\nimport { IProject } from \"../Interface/interface\";\nimport Content from \"./Content\";\n\nconst ContentBody = styled(\"div\")`\ndisplay: grid;\ngrid-template-columns: 1fr 1fr;\nalign-items: center;\njustify-items: center;\ngrid-gap: 10px;\nmargin: 30px 0px;\n`;\nconst Img = styled(\"img\") <{ order: number }>`\nbackground-color: ${props => props.theme.boxBgColor};\nwidth: 100%;\nheight: auto;\nborder-radius: 10px;\norder: ${props => props.order};\nbox-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n`;\nconst Info = styled(\"div\")`\n  padding: 10px;\n  font-size: 1.6rem;\n  @media screen and (min-width:480px) and (max-width:767px) {\n    font-size: 1.4rem;\n  }\n  @media screen and (max-width: 479px) {\n    font-size: 1.2rem;\n  }\n`;\nconst Title = styled(\"h3\")`\n  color: ${props => props.theme.accentColor};\n  font-size: 3.2rem;\n  margin-bottom: 20px;\n  font-weight: bold;\n  @media screen and (min-width:480px) and (max-width:767px) {\n    font-size: 2.4rem;\n  }\n  @media screen and (max-width: 479px) {\n    font-size: 2.2rem;\n  }\n`;\nconst Summary = styled(\"pre\")`\nfont-weight: bold;\nwhite-space: break-spaces;\nmargin-bottom: 10px;\ncolor: ${props => props.theme.primaryTextColor};`;\nconst Description = styled(\"pre\")`\ncolor: ${props => props.theme.secondaryTextColor};\nwhite-space: break-spaces;\nmargin-bottom: 10px;`;\nconst Tags = styled(\"ul\")``;\nconst Tag = styled(\"li\")`\n  display: inline-block;\n  list-style: none;\n  padding: 5px;\n  margin: 5px;\n  border: #a5936e solid 1px;\n  border-radius: 10px;\n`;\ninterface IProjects {\n  projects: IProject[] | undefined;\n}\n\nfunction Project({ projects }: IProjects) {\n  return (\n    <Content id=\"projects\" title=\"Project\">\n      {projects?.map((project, index) => {\n        return (\n          <ContentBody key={index}>\n            <Img\n              order={(index || 0) % 2 === 0 ? 1 : 0}\n              src={process.env.PUBLIC_URL + project.imgURL || \"\"}\n            ></Img>\n            <Info>\n              <Title>{project.title || \"\"}</Title>\n              <Summary>{project.summary || \"\"}</Summary>\n              <Description>{project.description || \"\"}</Description>\n              <Tags>\n                {project.tags.map((tag, index) => {\n                  return <Tag key={`project-tag-${index || \"\"}`}>{tag || \"\"}</Tag>;\n                })}\n              </Tags>\n            </Info>\n          </ContentBody>\n        )\n      })\n      }\n    </Content>\n  );\n}\nexport default Project;\n","import { useRecoilValue } from \"recoil\";\nimport styled from \"styled-components\";\nimport { scrolledAtom } from \"../atoms\";\n\nconst TopNavWrapper = styled(\"div\")`\n  position: fixed;\n  top: 0%;\n  transition: all 0.3s;\n  font-size : 1.6rem;\n  z-index: 1;\n  * {\n    grid-column-end: span 1;\n    max-width: 96px;\n  }\n  a {\n    cursor: pointer;\n  }\n\n\n  display: grid;\n  width: 100%;\n  grid-template-columns: repeat(12, 1fr);\n  grid-auto-rows: minmax(5rem, auto);\n  grid-gap: 10px;\n  align-items: center;\n  justify-items: center;\n  @media screen and (min-width:480px) and (max-width:767px) {\n    display: flex;\n    font-size : 1.4rem;\n    grid-gap: unset;\n  }\n  @media screen and (max-width: 479px) {\n    display: flex;\n    font-size : 1rem;\n    grid-gap: unset;\n  }\n`;\nconst Logo = styled(\"a\")`\n  img{\n    width: 100%;\n    height: auto;\n  }\n  @media screen and (min-width:480px) and (max-width:767px) {\n    width: 50px;\n  }\n  @media screen and (max-width: 479px) {\n    width: 50px;\n  }\n`;\nconst MenuIcon = styled(\"a\") <{ color?: string }>`\n  width: 100%;\n  position: relative;\n  text-align: center;\n  color: ${props => props.color};\n  font-weight: bold;\n  text-decoration: none;\n  &:after{\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    transform: scaleX(0);\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    transform-origin: bottom right;\n    transition: transform 0.25s ease-out;\n    background-color: ${props => props.color};\n  }\n  &:hover:after{\n    transform: scaleX(1);\n    transform-origin: bottom left;\n  }\n  @media screen and (min-width:480px) and (max-width:767px) {\n    width: auto;\n    padding: 10px;\n  }\n  @media screen and (max-width: 479px) {\n    width: auto;\n    padding: 10px;\n  }\n`;\nconst FlexSpacer = styled(\"div\")`\n  display:none;\n  @media screen and (min-width:480px) and (max-width:767px) {\n    display:block;\n    flex: 1;\n    max-width: none;\n  }\n  @media screen and (max-width: 479px) {\n    display:block;\n    flex: 1;\n    max-width: none;\n  }\n`\nconst GridSpacer = styled(\"div\") <{ unit: string }>`\n  grid-column-end: span ${props => props.unit};\n  @media screen and (min-width:480px) and (max-width:767px) {\n    display:none;\n  }\n  @media screen and (max-width: 479px) {\n    display:none;\n  }\n`\nconst HoverImage = styled(\"a\") <{ img: string, hoverImg: string }>`\n  width: 100%;\n  height: 50%;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: auto 100%;\n  transition: all 0.5s;\n  background-image:url(${props => props.img});\n  &:hover{\n  background-image:url(${props => props.hoverImg});\n  }\n  @media screen and (min-width:480px) and (max-width:767px) {\n    display:none;\n  }\n  @media screen and (max-width: 479px) {\n    display:none;\n  }\n`;\n\ninterface ITopNav {\n  logo: string | undefined;\n  scrolledLogo: string | undefined;\n  links: {\n    kakaotalk: string | undefined;\n    instagram: string | undefined;\n    github: string | undefined;\n  } | undefined;\n}\nfunction TopNav({ logo, scrolledLogo, links }: ITopNav) {\n  const scrolled = useRecoilValue(scrolledAtom)\n  const scrolledColor = scrolled ? \"#a5936e\" : \"white\";\n  return (\n    <TopNavWrapper id=\"topnav\" style={{\n      backgroundColor: scrolled ? \"white\" : \"transparent\"\n    }}>\n      <Logo href=\"#header\" className={scrolled ? \"scrolled\" : \"\"}>\n        <img src={process.env.PUBLIC_URL + (scrolled ? scrolledLogo : logo) || \"\"} alt=\"Logo\"></img>\n      </Logo>\n      <FlexSpacer></FlexSpacer>\n      <MenuIcon color={scrolledColor} href=\"#about-me\">About me</MenuIcon>\n      <MenuIcon color={scrolledColor} href=\"#projects\">Projects</MenuIcon>\n      <MenuIcon color={scrolledColor} href=\"#careers\">Career</MenuIcon>\n      <MenuIcon color={scrolledColor} href=\"#contacts\">Contact</MenuIcon>\n      <GridSpacer unit=\"4\"></GridSpacer>\n      <HoverImage href={links?.kakaotalk || \"\"} img={`${process.env.PUBLIC_URL}/icon/kakao-talk.png`} hoverImg={`${process.env.PUBLIC_URL}/icon/kakao-talk-hover.png`}></HoverImage>\n      <HoverImage href={links?.instagram || \"\"} img={`${process.env.PUBLIC_URL}/icon/instagram.png`} hoverImg={`${process.env.PUBLIC_URL}/icon/instagram-hover.png`}></HoverImage>\n      <HoverImage href={links?.github || \"\"} img={`${process.env.PUBLIC_URL}/icon/github.png`} hoverImg={`${process.env.PUBLIC_URL}/icon/github-hover.png`}></HoverImage>\n    </TopNavWrapper>\n  )\n\n}\n\nexport default TopNav;","import { useQuery } from \"react-query\";\nimport { useSetRecoilState } from \"recoil\";\nimport { fetchPortfolioData } from \"../api/api\";\nimport { scrolledAtom } from \"../atoms\";\nimport AboutMe from \"../components/AboutMe\";\nimport Career from \"../components/Career\";\nimport Contact from \"../components/Contact\";\nimport Header from \"../components/Header\";\nimport Project from \"../components/Project\";\nimport TopNav from \"../components/TopNav\";\nimport { IPortFolioData } from \"../Interface/interface\";\n\n\nfunction Portfolio() {\n  const { isLoading, data } = useQuery<IPortFolioData>(\"portfolioData\", fetchPortfolioData);\n  const setScrolled = useSetRecoilState(scrolledAtom);\n  const ScrolledHandler = () => {\n    const headerHeight = document.querySelector(\"#header\")?.clientHeight || 0;\n    const topnavHeight = document.querySelector(\"#topnav\")?.clientHeight || 0;\n    const windowY = window.scrollY;\n    if (windowY >= headerHeight - topnavHeight) setScrolled(true);\n    else setScrolled(false);\n  };\n  document.onscroll = ScrolledHandler;\n  document.onresize = ScrolledHandler;\n  return (\n    <>\n      {isLoading ?\n        null :\n        <>\n          <TopNav logo={data?.logoWhite} scrolledLogo={data?.logo} links={data?.links}></TopNav>\n          <Header backgroundVideo={data?.backgroundVideo} intro={data?.intro}></Header>\n          <AboutMe aboutMe={data?.aboutMe} profile={data?.profile}></AboutMe>\n          <Project projects={data?.projects}></Project>\n          <Career careers={data?.careers}></Career>\n          <Contact contacts={data?.contacts}></Contact>\n        </>\n      }\n    </>\n  )\n}\nexport default Portfolio;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"white\",\n  borderColor: \"#a5936e\",\n  primaryTextColor: \"#222222\",\n  secondaryTextColor: \"#555555\",\n  errorColor: \"#B42818\",\n  accentColor: \"#a5936e\",\n  boxBgColor: \"#C2BAB1\",\n  boxTextColor: \"#AAAAAA\"\n}\n","import { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Portfolio from \"./pages/Portfolio\";\nimport { ReactQueryDevtools } from \"react-query/devtools\"\nimport { lightTheme } from \"./theme\";\n\nconst GlobalStyle = createGlobalStyle`\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, menu, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  main, menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure,\n  footer, header, hgroup, main, menu, nav, section {\n    display: block;\n  }\n  /* HTML5 hidden-attribute fix for newer browsers */\n  *[hidden] {\n      display: none;\n  }\n  body {\n    line-height: 1;\n  }\n  menu, ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    background-color: ${props => props.theme.bgColor};\n    color: ${props => props.theme.primaryTextColor};\n  }\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n  html {\n    font-size: 62.5%;\n  }\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n      \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  \n  code {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\n      Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n  }\n  \n  .grid {\n    display: grid;\n    width: 100%;\n    grid-template-columns: repeat(12, 1fr);\n    grid-auto-rows: minmax(5rem, auto);\n    grid-gap: 10px;\n    align-items: center;\n    justify-items: center;\n    position: relative;\n  }\n  .grid .col-1 {\n    grid-column-end: span 1;\n  }\n  .grid .row-1 {\n    grid-row-end: span 1;\n  }\n  .grid .col-2 {\n    grid-column-end: span 2;\n  }\n  .grid .row-2 {\n    grid-row-end: span 2;\n  }\n  .grid .col-3 {\n    grid-column-end: span 3;\n  }\n  .grid .row-3 {\n    grid-row-end: span 3;\n  }\n  .grid .col-4 {\n    grid-column-end: span 4;\n  }\n  .grid .row-4 {\n    grid-row-end: span 4;\n  }\n  .grid .col-5 {\n    grid-column-end: span 5;\n  }\n  .grid .row-5 {\n    grid-row-end: span 5;\n  }\n  .grid .col-6 {\n    grid-column-end: span 6;\n  }\n  .grid .row-6 {\n    grid-row-end: span 6;\n  }\n  .grid .col-7 {\n    grid-column-end: span 7;\n  }\n  .grid .row-7 {\n    grid-row-end: span 7;\n  }\n  .grid .col-8 {\n    grid-column-end: span 8;\n  }\n  .grid .row-8 {\n    grid-row-end: span 8;\n  }\n  .grid .col-9 {\n    grid-column-end: span 9;\n  }\n  .grid .row-9 {\n    grid-row-end: span 9;\n  }\n  .grid .col-10 {\n    grid-column-end: span 10;\n  }\n  .grid .row-10 {\n    grid-row-end: span 10;\n  }\n  .grid .col-11 {\n    grid-column-end: span 11;\n  }\n  .grid .row-11 {\n    grid-row-end: span 11;\n  }\n  .grid .col-full,\n  .grid .col-12 {\n    grid-column: 1 / 13;\n  }\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n      \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  \n  code {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\n      Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n  }\n  \n  .grid {\n    display: grid;\n    width: 100%;\n    grid-template-columns: repeat(12, 1fr);\n    grid-auto-rows: minmax(5rem, auto);\n    grid-gap: 10px;\n    align-items: center;\n    justify-items: center;\n    position: relative;\n  }\n  .grid .col-1 {\n    grid-column-end: span 1;\n  }\n  .grid .row-1 {\n    grid-row-end: span 1;\n  }\n  .grid .col-2 {\n    grid-column-end: span 2;\n  }\n  .grid .row-2 {\n    grid-row-end: span 2;\n  }\n  .grid .col-3 {\n    grid-column-end: span 3;\n  }\n  .grid .row-3 {\n    grid-row-end: span 3;\n  }\n  .grid .col-4 {\n    grid-column-end: span 4;\n  }\n  .grid .row-4 {\n    grid-row-end: span 4;\n  }\n  .grid .col-5 {\n    grid-column-end: span 5;\n  }\n  .grid .row-5 {\n    grid-row-end: span 5;\n  }\n  .grid .col-6 {\n    grid-column-end: span 6;\n  }\n  .grid .row-6 {\n    grid-row-end: span 6;\n  }\n  .grid .col-7 {\n    grid-column-end: span 7;\n  }\n  .grid .row-7 {\n    grid-row-end: span 7;\n  }\n  .grid .col-8 {\n    grid-column-end: span 8;\n  }\n  .grid .row-8 {\n    grid-row-end: span 8;\n  }\n  .grid .col-9 {\n    grid-column-end: span 9;\n  }\n  .grid .row-9 {\n    grid-row-end: span 9;\n  }\n  .grid .col-10 {\n    grid-column-end: span 10;\n  }\n  .grid .row-10 {\n    grid-row-end: span 10;\n  }\n  .grid .col-11 {\n    grid-column-end: span 11;\n  }\n  .grid .row-11 {\n    grid-row-end: span 11;\n  }\n  .grid .col-full,\n  .grid .col-12 {\n    grid-column: 1 / 13;\n  }\n`\n\nfunction App() {\n  return (\n    <ThemeProvider theme={lightTheme}>\n      <GlobalStyle>\n      </GlobalStyle>\n      <Portfolio ></Portfolio>\n      <ReactQueryDevtools initialIsOpen={true} />\n    </ThemeProvider>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { RecoilRoot } from \"recoil\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}